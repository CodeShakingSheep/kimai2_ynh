#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_add_extra_apt_repos__3
source ynh_install_php__3
source ynh_send_readme_to_admin__2
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================
ynh_print_info --message="Managing script failure..."

ynh_clean_setup () {
	true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================
ynh_print_info --message="Retrieving arguments from the manifest..."

domain=$YNH_APP_ARG_DOMAIN
path_url="/"
admin=$YNH_APP_ARG_ADMIN
is_public=$YNH_APP_ARG_IS_PUBLIC
registration=$YNH_APP_ARG_REGISTRATION
database=$YNH_APP_ARG_DATABASE
admin_pass=$(ynh_string_random 24)
random_key=$(ynh_string_random 32)
admin_email=$(ynh_user_get_info $admin 'mail')

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_print_info --message="Validating installation parameters..."

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_print_info --message="Storing installation settings..."

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=admin --value=$admin
ynh_app_setting_set --app=$app --key=is_public --value=$is_public
ynh_app_setting_set --app=$app --key=random_key --value=$random_key
ynh_app_setting_set --app=$app --key=registration --value=$registration
ynh_app_setting_set --app=$app --key=database --value=$database

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL PHP7.3
#=================================================

if [ "$(lsb_release --codename --short)" = "buster" ]; then
	pkg_dependencies="$pkg_dependencies $extra_pkg_dependencies"
else
	ynh_print_info --message="Installing PHP7.3..."
	ynh_install_php --phpversion="7.3" --package="$extra_pkg_dependencies"
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_print_info --message="Setting up source files..."

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_print_info --message="Configuring nginx web server..."

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_print_info --message="Configuring system user..."

# Create a system user
ynh_system_user_create --username=$app

#=================================================
# SPECIFIC SETUP
#=================================================
# CONFIGURE KIMAI 2
#=================================================
ynh_print_info --message="Configuring Kimai 2..."

# Configure registration
sudo cp ../conf/local.yaml $final_path/config/packages/local.yaml
if [ $registration -eq 1  ]
then
	ynh_replace_string "__REGISTRATION__" "true" "$final_path/config/packages/local.yaml"
else
	ynh_replace_string "__REGISTRATION__" "false" "$final_path/config/packages/local.yaml"
fi

env_conf=$final_path/.env
# Configure environement
if [ "$database" = "mysql" ]; then
	# setup application config
	sudo  cp ../conf/.env.mysql $env_conf
	db_name=$(ynh_sanitize_dbid $app)
	ynh_app_setting_set $app db_name $db_name
	ynh_mysql_setup_db $db_name $db_name
	
	ynh_replace_string "__RANDOM_KEY__"  "$random_key" "$env_conf"
	ynh_replace_string "__DOMAIN__"      "$domain"     "$env_conf"
	ynh_replace_string "__DB_PASSWORD__" "$db_pwd"     "$env_conf"
	ynh_replace_string "__DB_USER__"     "$db_name"    "$env_conf"
	ynh_replace_string "__DB_NAME__"     "$db_name"    "$env_conf"
else
	# setup application config
	sudo  cp ../conf/.env.sqlite $env_conf
	ynh_replace_string "__RANDOM_KEY__"  "$random_key" "$env_conf"
	ynh_replace_string "__DOMAIN__"      "$domain"     "$env_conf"
fi

#=================================================
# BUILD KIMAI 2
#=================================================
ynh_print_info --message="Building Kimai 2..."

pushd "$final_path"
	php7.3 bin/console kimai:install -n
popd

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================
ynh_print_info --message="Storing the config file checksum..."

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum --file="$env_conf"

#=================================================
# GENERIC FINALIZATION
#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_print_info --message="Configuring php-fpm..."

# Create a dedicated php-fpm config
ynh_add_fpm_config --phpversion="7.3"

#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================
ynh_print_info --message="Securing files and directories..."

# Set permissions to app files
chown -R $app: $final_path

#=================================================
# SETUP SSOWAT
#=================================================
ynh_print_info --message="Configuring SSOwat..."

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# unprotected_uris allows SSO credentials to be passed anyway.
	ynh_app_setting_set --app=$app --key=unprotected_uris --value="/"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_print_info --message="Reloading nginx web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# SEND A README FOR THE ADMIN
#=================================================
ynh_print_info --message="Sending a readme for the admin..."

ynh_replace_string --match_string="__APP__"    --replace_string="$app"    --target_file="../conf/message"
ynh_replace_string --match_string="__DOMAIN__"    --replace_string="$domain"    --target_file="../conf/message"
ynh_replace_string --match_string="__PATH_URL__"    --replace_string="$path_url"    --target_file="../conf/message"
ynh_replace_string --match_string="__ADMIN_EMAIL__"    --replace_string="$admin_email"    --target_file="../conf/message"
ynh_replace_string --match_string="__ADMIN_PASS__"    --replace_string="$admin_pass"    --target_file="../conf/message"

ynh_send_readme_to_admin --app_message="../conf/message" --recipients=$admin_email --type='install'

#=================================================
# END OF SCRIPT
#=================================================

ynh_print_info --message="Installation of $app completed"
